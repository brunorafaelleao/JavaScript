1) Editor de códigos
-> Para trabalhar com a linguagem programação JavaScript usaremos o
VS CODE e o NODE.JS. O Vs Code para editar os códigos e o Node para executar

2) Variáveis
-> As variáveis devem ter seu nome sem caracteres especiais, exceto "$" cifrão ou
underline "_".
-> As variáveis não podem ter seus identificadores começando com número, mas elas
podem ter número ao longo do nome.

3) Operadores
-> Para trabalhar com operações:
+ Adição
- Subtração
* Multiplicação
/ Divisão
** Exponenciação
% Resto da divisão (modulus)
++ incremento
-- decremento
-> É possível fazer junções (concatenações de variáveis usando +)
ex:
const texto1 = 'Olá';
const texto2 = 'Mundo';
const textofinal = texto1 + texto2;
console.log(textofinal);

4) Para declarar variáveis constantes e mutáveis e exibir algo no interpretador
-> Constantes: const =
-> Mutáveis: let =
-> para exibir: console.log()

5) Atalho para formatação Prettier:
-> alt + shift+ F

6) Tipos de dados:
-> String = deve ser declarado entre aspas duplas ou simples, mas tem o uso da crase.
No caso da crase, vira uma string template que permite usarmos expressõe embutidas em si
ex:
const texto1 = 'aqui tem uma string normal';
const texto2 = "Essa tbm é uma string normal";
const numero = 3142;
const stringTemplate = `o numero que decidi registrar é ${numero}´;

-> Number = é o tipo de dado que representa informaçõe numéricas (inteiros positivos ou negativos, decimais)
ex:
const num1 = 27;
const num2 = 23.25;
const num3 = -40;
const total = num1 + num2 + num3;

console.log(total);
//resultado é 10.25

7) Tipo Booleano
-> são valores do tipo true ou false
ex:
const x = true;
const y = false;
-> Operadores booleanos
&& = AND (e) para operações em que as duas condições são simultaneamentes verdadeiras
|| = OR(ou) para operações em que pelo menos uma das condições seja verdadeira
! = NOT(não, inverso) para operações em que queremos o inverso do valor booleano

8) Operadores de comparação
-> Para comparar se um valor é igual a outro: ===
-> Para comparar se um valor é diferente de outro: !==
-> Para comparar se um valor é maior ou igual: >=
-> Para comparar se um valor é menor ou igual: <=
-> Menor que: <
-> Maior que: >
Obs: diferença entre === e == é a restrição, pois o === faz uma comparação rígida e restrita
que analisa o dado e o tipo de dado.

9) Tipos Referência (Object)
-> Object (Objeto) = É um documento que tem campos e valores associados. É uma única variável que contém
todo um conjunto de informações sobre um elemento.
exemplo de sua estrutura:
const documentoIdentidade = {
  nome: "Bruno",
  sobrenome: "Leão",
  cpf: "944.965.012-87",
  empresa: "SEMSA",
  idade: 34,
};
-> Para acessar um dado do Object = console.log(documentoIdentidade.empresa); ou console.log(documentoIdentidade["empresa"]);

10) Tipos Referência (Array)
-> O Array é como uma lista de informações, lista de valores